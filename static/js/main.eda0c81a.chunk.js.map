{"version":3,"sources":["component/ContactElement/ContactElement.module.css","component/Container/Container.module.css","component/ContactForm/ContactForm.module.css","component/Container/Container.js","component/ContactElement/ContactElement.js","component/ContactList/ContactList .js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/App.js","index.js","component/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","с","container","ContactsEl","name","number","id","onDeleteContact","ce","box","btn","type","onClick","size","Contacts","contacts","c","list","map","item","ContactForm","state","hendleChange","e","currentTarget","value","setState","hendleSubmit","preventDefault","props","onSubmit","reset","p","this","wrapp","onChange","pattern","title","required","Component","Filter","App","filter","addContact","obj","contact","shortid","generate","objectContacts","some","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eda0c81a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactElement_box__3tuJI\",\"btn\":\"ContactElement_btn__1GaKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Eziz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactForm_box__1pBP5\",\"wrapp\":\"ContactForm_wrapp__2tji9\",\"btn\":\"ContactForm_btn__3sBDH\"};","import PropTypes from 'prop-types';\r\nimport с from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={с.container}>{children}</div>;\r\n}\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\nimport ce from './ContactElement.module.css';\nimport { FaTrashAlt } from 'react-icons/fa';\n\nconst ContactsEl = ({ name, number, id ,onDeleteContact }) => (\n  <div className={ce.box} >\n    <p>{name}</p>\n    <p>: {number}</p>\n     <button className={ce.btn} type=\"button\" onClick={() => onDeleteContact(id)}>\n          <FaTrashAlt size=\"20px\" />\n        </button>\n  </div>\n);\nContactsEl.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default ContactsEl;\n","import PropTypes from 'prop-types';\nimport c from './ContactList.module.css';\nimport ContactsEl from '../ContactElement/ContactElement';\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <ul className={c.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={c.item}>\n        <ContactsEl name={name} number={number} onDeleteContact={() => onDeleteContact(id)} />\n       \n      </li>\n    ))}\n  </ul>\n);\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Contacts;\n","import React, { Component } from 'react';\r\nimport p from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  hendleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={p.box} onSubmit={this.hendleSubmit}>\r\n        <label className={p.wrapp}>\r\n          <p>Name</p>\r\n          <input\r\n            value={this.state.name}\r\n            onChange={this.hendleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={p.wrapp}>\r\n          <p>Number</p>\r\n          <input\r\n            value={this.state.number}\r\n            onChange={this.hendleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className={p.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Container from '../component/Container/Container';\r\nimport shortid from 'shortid';\r\n\r\n//====================================\r\nimport ContactList from './ContactList/ContactList ';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n  //============================================\r\n  addContact = ({ name, number }) => {\r\n    const obj = this.state.contacts;\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const objectContacts = obj.some(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n    if (objectContacts) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n  //============================================\r\n  //============================================\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n  //=================================================\r\n  render() {\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__ZpfFy\",\"item\":\"ContactList_item__hYVa5\"};"],"sourceRoot":""}