{"version":3,"sources":["component/Container/Container.module.css","component/ContactForm/ContactForm.module.css","component/Container/Container.js","component/ContactList/ContactList .js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/App.js","index.js","component/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","с","container","Contacts","contacts","onDeleteContact","c","list","map","id","name","number","item","btn","type","onClick","size","ContactForm","state","nameInputId","shortid","generate","numberInputId","hendleChange","e","currentTarget","value","setState","hendleSubmit","preventDefault","props","onSubmit","reset","p","box","this","wrapp","htmlFor","onChange","pattern","title","required","Component","Filter","App","filter","addContact","obj","contact","objectContacts","some","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e65102a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__38Cwh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactForm_box__1z8ta\",\"wrapp\":\"ContactForm_wrapp__2TZjN\",\"btn\":\"ContactForm_btn__1ZzNc\"};","import PropTypes from 'prop-types';\nimport с from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={с.container}>{children}</div>;\n}\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport c from './ContactList.module.css';\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <ul className={c.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={c.item}>\n        {name}: {number}\n        <button className={c.btn} type=\"button\" onClick={() => onDeleteContact(id)}>\n          <FaTrashAlt size=\"20px\" />\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport p from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  hendleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  hendleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form className={p.box} onSubmit={this.hendleSubmit}>\n        <label className={p.wrapp} htmlFor={this.nameInputId}>\n          <p>Name</p>\n          <input\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.hendleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={p.wrapp} htmlFor={this.numberInputId}>\n          <p>Number</p>\n          <input\n            id={this.numberInputId}\n            value={this.state.number}\n            onChange={this.hendleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <br />\n        <button className={p.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Container from '../component/Container/Container';\nimport shortid from 'shortid';\n\n//====================================\nimport ContactList from './ContactList/ContactList ';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n  //============================================\n  addContact = ({ name, number }) => {\n    const obj = this.state.contacts;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const objectContacts = obj.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (objectContacts) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  //============================================\n  //============================================\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  //=================================================\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2pd7s\",\"list\":\"ContactList_list__ypn5a\",\"item\":\"ContactList_item__3TnEl\"};"],"sourceRoot":""}